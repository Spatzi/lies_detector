1. Recording
============
Installation
------------
a. Make sure you have VS2013 installed
b. Download and install Kinect SDK v1.8 from https://www.microsoft.com/en-us/download/details.aspx?id=40278
Running
-------
a. Plug in the Kinect.
b. Run the LieDetectorApplication.sln, and press the 'Record' button in the GUI.
c. Press the 'Initialize' button.
d. The skeleton of the person who is in front of the camera will appear in the window.
e. To start\finish recording, press the 'Start'\'Stop' buttons.
f. When finished, select the destination folder to save the record.
g. Save true stories and lies in different folders.

2. Feature extraction (.CSV file creation)
==========================================
Installation
------------
a. Make sure you have VS2013 installed
Running
-------
a. Run the LieDetectorApplication.sln, and press the 'Extract' button in the GUI.
b. Press the 'Select Records Folder' button and select the destination folder (separately for each folder).
   Our records are at Data\Truths and Data\Lies.
c. Press the 'Extract' button and save as 'truths.csv' or 'lies.csv'.
   Our extracted CSV's are in Source\Classification\lie_detector\data.
Notes
-----
a. The default features are continuous.
b. For binary features replace 'RecordPropertyExtractor.cs' with 'RecordBinaryPropertyExtractor.cs'.

3. Classification
=================
Installation
------------
a. Make sure you have Python 2.7 installed with PIP (package manager)
b. pip install scikit-learn
c. pip install simpleai
d. pip install tqdm
Running
-------
a. Start Python with the module in the working directory
b. To import the module, run: import lie_detector
c. For initial classifier scores, run: lie_detector.report_initial_scores()
d. For classifier scores with optimal features (local search), run: lie_detector.report_scores_with_optimal_features() # slow
Notes
-----
a. The default features are continuous. 
b. For binary features replace 'lies.csv' with 'lies_binary.csv' and 'truths.csv' with 'truths_binary.csv'.
c. For better estimation you can increase _score_iter and _search_iter


Source                                           Entire source code folder
│
├───Classification                               Program in charge of classification (Python 2.7)
│   └───lie_detector
│       │   classifiers_scores.py                Defines methods for calculating and printing the classifiers' scores
│       │   data_utils.py                        General utils for working with the data
│       │   search_problems.py                   Defines the local search problem for finding optimal feature subset
│       │   __init__.py                          Exports main methods
│       │
│       └───data
│               lies.csv                         Dataset of extracted numeric features from lies
│               lies_binary.csv                  Dataset of extracted binary features from lies
│               truths.csv                       Dataset of extracted numeric features from truths
│               truths_binary.csv                Dataset of extracted binary features from truths
│
└───Extraction                                   Program in charge of recording using Kinect and extracting feature CSV's (C#)
    └───LieDetectorApplication
        │   LieDetectorApplication.sln           Auto-generated
        │
        └───LieDetectorApplication
            │   SkeletonSignalGenerator.cs       Code that converts a Kinect skeleton stream into a 3D signal model
            │   RecordPropertyExtractor.cs       In charge of extracting all numerical features from a recording
            │   RecordBinaryPropertyExtractor.cs In charge of extracting all binary features from a recording
            │
            │   LieDetectorApplication.csproj    Auto-generated
            │
            ├───bin
            │   └───Debug
            │           Liadmat.Signal.dll       External library for 3D signal processing (written by us, see https://github.com/liadmat/signal for source)
            │
            ├───GUI
            │       ExtractForm.cs               Code supporting the feature extraction form in the GUI
            │       RecordForm.cs                Code supporting the Kinect recording form in the GUI
            │       MainForm.cs                  Code supporting the main form in the GUI
            │       SkeletonStreamPainter.cs     Modified code (see file) for painting live skeletons while recording
            │
            │       ExtractForm.Designer.cs      Auto-generated GUI code (generated by WinForms editor)
            │       ExtractForm.resx             Auto-generated GUI code (generated by WinForms editor)
            │       ImageUserControl.xaml        Auto-generated GUI code (generated by WinForms editor)
            │       ImageUserControl.xaml.cs     Auto-generated GUI code (generated by WinForms editor)
            │       MainForm.Designer.cs         Auto-generated GUI code (generated by WinForms editor)
            │       MainForm.resx                Auto-generated GUI code (generated by WinForms editor)
            │       Program.cs                   Auto-generated GUI code (generated by WinForms editor)
            │       RecordForm.Designer.cs       Auto-generated GUI code (generated by WinForms editor)
            │       RecordForm.resx              Auto-generated GUI code (generated by WinForms editor)
            │
            └───Models
                    Record.cs                    A serializable class representing a recorded Kinect stream (before extraction)
 
